// <auto-generated />
using System;
using MercadoDigital.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MercadoDigital.Infra.Data.Migrations
{
    [DbContext(typeof(MercadoDbContext))]
    [Migration("20230320220659_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.CategoriaProduto", b =>
                {
                    b.Property<int>("IdCategoria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProduto")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdCategoria", "IdProduto");

                    b.HasIndex("IdProduto");

                    b.ToTable("CategoriaProduto");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdEndereco");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Estoque", b =>
                {
                    b.Property<int>("IdEstoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProduto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEstoque");

                    b.HasIndex("IdProduto")
                        .IsUnique();

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorPedido")
                        .HasColumnType("REAL");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.PedidoItem", b =>
                {
                    b.Property<int>("IdPedido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProduto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Subtotal")
                        .HasColumnType("REAL");

                    b.HasKey("IdPedido", "IdProduto");

                    b.HasIndex("IdProduto");

                    b.ToTable("PedidoItem");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("TEXT");

                    b.HasKey("IdProduto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Idade")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.CategoriaProduto", b =>
                {
                    b.HasOne("MercadoDigital.Domain.Entities.Categoria", "Categoria")
                        .WithMany("CategoriaProduto")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MercadoDigital.Domain.Entities.Produto", "Produto")
                        .WithMany("CategoriaProduto")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("MercadoDigital.Domain.Entities.Usuario", "Usuario")
                        .WithOne("Endereco")
                        .HasForeignKey("MercadoDigital.Domain.Entities.Endereco", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Estoque", b =>
                {
                    b.HasOne("MercadoDigital.Domain.Entities.Produto", "Produto")
                        .WithOne("Estoque")
                        .HasForeignKey("MercadoDigital.Domain.Entities.Estoque", "IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("MercadoDigital.Domain.Entities.Usuario", "Usuario")
                        .WithOne("Pedido")
                        .HasForeignKey("MercadoDigital.Domain.Entities.Pedido", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.PedidoItem", b =>
                {
                    b.HasOne("MercadoDigital.Domain.Entities.Pedido", "Pedido")
                        .WithMany("PedidoItem")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MercadoDigital.Domain.Entities.Produto", "Produto")
                        .WithMany("PedidoItem")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("CategoriaProduto");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("PedidoItem");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Produto", b =>
                {
                    b.Navigation("CategoriaProduto");

                    b.Navigation("Estoque")
                        .IsRequired();

                    b.Navigation("PedidoItem");
                });

            modelBuilder.Entity("MercadoDigital.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Pedido")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
